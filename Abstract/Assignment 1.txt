// Abstract class "Shape"
abstract class Shape {
    abstract double calculateArea();
}

// Subclass "Circle" inherits from "Shape"
class Circle extends Shape {
    double radius;

    public Circle(double radius) {
        this.radius = radius;
    }

    @Override
    double calculateArea() {
        return Math.PI * radius * radius;
    }
}

// Subclass "Rectangle" inherits from "Shape"
class Rectangle extends Shape {
    double width;
    double height;

    public Rectangle(double width, double height) {
        this.width = width;
        this.height = height;
    }

    @Override
    double calculateArea() {
        return width * height;
    }
}

public class MathDemo {
    public static void main(String[] args) {
        // Create an object of the Circle class
        Circle circle = new Circle(5.0);

        // Create an object of the Rectangle class
        Rectangle rectangle = new Rectangle(4.0, 6.0);

        // Call the "calculateArea" method for both objects
        double circleArea = circle.calculateArea();
        double rectangleArea = rectangle.calculateArea();

        System.out.println("Area of the Circle: " + circleArea);
        System.out.println("Area of the Rectangle: " + rectangleArea);
    }
}
